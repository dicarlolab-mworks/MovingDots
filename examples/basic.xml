<?xml version="1.0" standalone="no"?>
<monkeyml version="1.0">
    <io_devices tag="IO Devices"></io_devices>
    <variables tag="Variables">
        <variable tag="field_radius" scope="global" logging="when_changed" default_value="10" type="float"></variable>
        <variable tag="field_center_x" scope="global" logging="when_changed" default_value="0" type="float"></variable>
        <variable tag="field_center_y" scope="global" logging="when_changed" default_value="0" type="float"></variable>
        <variable tag="num_dots" scope="global" logging="when_changed" default_value="1000" type="integer"></variable>
        <variable tag="dot_size" scope="global" logging="when_changed" default_value="0.2" type="float"></variable>
        <variable tag="direction" scope="global" logging="when_changed" default_value="45" type="float"></variable>
        <variable tag="speed" scope="global" logging="when_changed" default_value="2" type="float"></variable>
        <variable tag="stop" scope="global" logging="when_changed" default_value="0" type="boolean"></variable>
        <variable tag="pause" scope="global" logging="when_changed" default_value="0" type="boolean">
            <action type="if" tag="If true" condition="pause">
                <action tag="Pause dynamic stimulus" type="pause_dynamic_stimulus" stimulus="dots"></action>
            </action>
            <action type="if" tag="If false" condition="!pause">
                <action tag="Unpause dynamic stimulus" type="unpause_dynamic_stimulus" stimulus="dots"></action>
            </action>
        </variable>
        <variable tag="announce_dots" scope="global" logging="when_changed" default_value="0" type="boolean"></variable>
    </variables>
    <sounds tag="Sounds"></sounds>
    <stimuli tag="Stimuli">
        <stimulus tag="background" full_name="background" type="blank_screen" color="0.5, 0.5, 0.5"></stimulus>
        <stimulus type="dynamic_random_dots" tag="dots" field_radius="field_radius" field_center_x="field_center_x" field_center_y="field_center_y" num_dots="num_dots" dot_size="dot_size" color="1.0,1.0,1.0" alpha_multiplier="1.0" direction="direction" speed="speed" announce_dots="announce_dots" autoplay="1"></stimulus>
    </stimuli>
    <filters tag="Filters"></filters>
    <optimizers tag="Optimizers"></optimizers>
    <experiment tag="New Experiment" full_name="" description="">
        <protocol tag="New Protocol" nsamples="1" sampling_method="cycles" selection="sequential">
            <task_system tag="New Task System" interruptible="YES">
                <task_system_state tag="Begin State System" interruptible="YES">
                    <action_marker _unmoveable="1" tag="Actions"></action_marker>
                    <action type="report" tag="Announce Begin State System" message="State system beginning"></action>
                    <action type="assignment" tag="Assign Variable" variable="stop" value="0"></action>
                    <action type="assignment" tag="Assign Variable 2" variable="pause" value="0"></action>
                    <action tag="Queue background" type="queue_stimulus" stimulus="background"></action>
                    <action tag="Queue dots" type="queue_stimulus" stimulus="dots"></action>
                    <action tag="Update display" type="update_stimulus_display"></action>
                    <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                    <transition type="conditional" tag="If Condition is True, Transition to ..." condition="stop" target="Exit State System"></transition>
                </task_system_state>
                <task_system_state tag="Exit State System" interruptible="YES">
                    <action_marker _unmoveable="1" tag="Actions"></action_marker>
                    <action type="report" tag="Announce Exit State System" message="Leaving state system"></action>
                    <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                    <transition tag="Return to parent task system" type="yield"></transition>
                </task_system_state>
            </task_system>
        </protocol>
    </experiment>
</monkeyml>